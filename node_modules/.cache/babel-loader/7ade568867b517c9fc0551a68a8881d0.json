{"ast":null,"code":"var _jsxFileName = \"/Users/andrejkondratov/source/train_ts/andrei1/src/components/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { TodoList } from \"./TodoList\";\nimport Header from './Header';\nimport Cards from './Cards';\nimport Grid from '@mui/system/Unstable_Grid/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [value, setValue] = useState('');\n  const [todos, setTodos] = useState([]);\n  const inputRef = useRef(null);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') addTodo();\n  };\n\n  const addTodo = () => {\n    if (value) {\n      setTodos([...todos, {\n        id: Date.now(),\n        title: value,\n        complete: false\n      }]);\n      setValue('');\n    }\n  };\n\n  const removeTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const toggleTodo = id => {\n    setTodos(todos.map(todo => {\n      if (todo.id !== id) return todo;\n      return { ...todo,\n        complete: !todo.complete\n      };\n    }));\n  };\n\n  useEffect(() => {\n    if (inputRef.current) inputRef.current.focus();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: value,\n          onChange: handleChange,\n          onKeyDown: handleKeyDown,\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTodo,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        items: todos,\n        removeTodo: removeTodo,\n        toggleTodo: toggleTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"JEcmU8pJ3ImZyaUjEyUlXoWbaps=\");\n\n_c = App;\nexport { App };\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","TodoList","Header","Cards","Grid","App","value","setValue","todos","setTodos","inputRef","handleChange","e","target","handleKeyDown","key","addTodo","id","Date","now","title","complete","removeTodo","filter","todo","toggleTodo","map","current","focus"],"sources":["/Users/andrejkondratov/source/train_ts/andrei1/src/components/App.tsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\"\nimport { ITodo } from '../types/data';\nimport { TodoList } from \"./TodoList\";\nimport Header from './Header'\nimport Cards from './Cards'\nimport Grid from '@mui/system/Unstable_Grid/Grid';\n\n\nconst App: React.FC = () => {\n    const[value, setValue] = useState('');\n    const[todos, setTodos] = useState<ITodo[]>([]);\n\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n        setValue(e.target.value);\n    }\n\n    const handleKeyDown: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n        if (e.key === 'Enter')\n        addTodo();\n    };\n\n    const addTodo = () => {\n        if(value) {\n            setTodos([...todos, {\n                id: Date.now(),\n                title: value,\n                complete: false,\n            }])\n            setValue('')\n        }\n    }\n\n    const removeTodo = (id : number) : void => {\n        setTodos(todos.filter(todo => todo.id !== id))\n    }\n\n    const toggleTodo = (id : number) : void => {\n        setTodos(todos.map(todo => {\n            if (todo.id !== id) return todo;\n\n            return {\n                ...todo,\n                complete: !todo.complete\n            }\n        }))\n    }\n\n    useEffect(() => {\n        if (inputRef.current)\n        inputRef.current.focus();\n    })\n\n    return (\n        <>\n        <Header/>\n        <Grid container>\n            <Cards/>\n            <Cards/>\n        </Grid>\n        <div>\n            <div>\n            <input\n             type=\"text\"\n             value={value}\n                onChange={handleChange}\n                onKeyDown={handleKeyDown}\n                ref={inputRef}\n            />\n            <button onClick={addTodo}>Add</button>\n        </div>\n        <TodoList \n            items={todos}\n            removeTodo={removeTodo}\n            toggleTodo={toggleTodo}\n        />\n      </div>\n      </>\n    );\n}\n\nexport {App}"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AAEA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,gCAAjB;;;;AAGA,MAAMC,GAAa,GAAG,MAAM;EAAA;;EACxB,MAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAjC;EACA,MAAK,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAU,EAAV,CAAjC;EAEA,MAAMY,QAAQ,GAAGV,MAAM,CAAmB,IAAnB,CAAvB;;EAEA,MAAMW,YAAwD,GAAIC,CAAD,IAAO;IACpEL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASP,KAAV,CAAR;EACH,CAFD;;EAIA,MAAMQ,aAA2D,GAAIF,CAAD,IAAO;IACvE,IAAIA,CAAC,CAACG,GAAF,KAAU,OAAd,EACAC,OAAO;EACV,CAHD;;EAKA,MAAMA,OAAO,GAAG,MAAM;IAClB,IAAGV,KAAH,EAAU;MACNG,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;QAChBS,EAAE,EAAEC,IAAI,CAACC,GAAL,EADY;QAEhBC,KAAK,EAAEd,KAFS;QAGhBe,QAAQ,EAAE;MAHM,CAAX,CAAD,CAAR;MAKAd,QAAQ,CAAC,EAAD,CAAR;IACH;EACJ,CATD;;EAWA,MAAMe,UAAU,GAAIL,EAAD,IAAwB;IACvCR,QAAQ,CAACD,KAAK,CAACe,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYA,EAAjC,CAAD,CAAR;EACH,CAFD;;EAIA,MAAMQ,UAAU,GAAIR,EAAD,IAAwB;IACvCR,QAAQ,CAACD,KAAK,CAACkB,GAAN,CAAUF,IAAI,IAAI;MACvB,IAAIA,IAAI,CAACP,EAAL,KAAYA,EAAhB,EAAoB,OAAOO,IAAP;MAEpB,OAAO,EACH,GAAGA,IADA;QAEHH,QAAQ,EAAE,CAACG,IAAI,CAACH;MAFb,CAAP;IAIH,CAPQ,CAAD,CAAR;EAQH,CATD;;EAWAtB,SAAS,CAAC,MAAM;IACZ,IAAIW,QAAQ,CAACiB,OAAb,EACAjB,QAAQ,CAACiB,OAAT,CAAiBC,KAAjB;EACH,CAHQ,CAAT;EAKA,oBACI;IAAA,wBACA,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,IAAD;MAAM,SAAS,MAAf;MAAA,wBACI,QAAC,KAAD;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,KAAD;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA,eAMA;MAAA,wBACI;QAAA,wBACA;UACC,IAAI,EAAC,MADN;UAEC,KAAK,EAAEtB,KAFR;UAGI,QAAQ,EAAEK,YAHd;UAII,SAAS,EAAEG,aAJf;UAKI,GAAG,EAAEJ;QALT;UAAA;UAAA;UAAA;QAAA,QADA,eAQA;UAAQ,OAAO,EAAEM,OAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QARA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAWA,QAAC,QAAD;QACI,KAAK,EAAER,KADX;QAEI,UAAU,EAAEc,UAFhB;QAGI,UAAU,EAAEG;MAHhB;QAAA;QAAA;QAAA;MAAA,QAXA;IAAA;MAAA;MAAA;MAAA;IAAA,QANA;EAAA,gBADJ;AA0BH,CAxED;;GAAMpB,G;;KAAAA,G;AA0EN,SAAQA,GAAR"},"metadata":{},"sourceType":"module"}